
TRAFFIC_CONTROL.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000098  00800100  0000037c  000003f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000037c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000488  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004b8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  000004f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001178  00000000  00000000  00000548  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000073e  00000000  00000000  000016c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000884  00000000  00000000  00001dfe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a4  00000000  00000000  00002684  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00006e20  00000000  00000000  00002728  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a9f  00000000  00000000  00009548  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00009fe7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000023d  00000000  00000000  0000a027  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	44 c0       	rjmp	.+136    	; 0x8e <__bad_interrupt>
   6:	00 00       	nop
   8:	42 c0       	rjmp	.+132    	; 0x8e <__bad_interrupt>
   a:	00 00       	nop
   c:	40 c0       	rjmp	.+128    	; 0x8e <__bad_interrupt>
   e:	00 00       	nop
  10:	3e c0       	rjmp	.+124    	; 0x8e <__bad_interrupt>
  12:	00 00       	nop
  14:	3c c0       	rjmp	.+120    	; 0x8e <__bad_interrupt>
  16:	00 00       	nop
  18:	3a c0       	rjmp	.+116    	; 0x8e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	38 c0       	rjmp	.+112    	; 0x8e <__bad_interrupt>
  1e:	00 00       	nop
  20:	36 c0       	rjmp	.+108    	; 0x8e <__bad_interrupt>
  22:	00 00       	nop
  24:	34 c0       	rjmp	.+104    	; 0x8e <__bad_interrupt>
  26:	00 00       	nop
  28:	32 c0       	rjmp	.+100    	; 0x8e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	30 c0       	rjmp	.+96     	; 0x8e <__bad_interrupt>
  2e:	00 00       	nop
  30:	2e c0       	rjmp	.+92     	; 0x8e <__bad_interrupt>
  32:	00 00       	nop
  34:	2c c0       	rjmp	.+88     	; 0x8e <__bad_interrupt>
  36:	00 00       	nop
  38:	2a c0       	rjmp	.+84     	; 0x8e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	28 c0       	rjmp	.+80     	; 0x8e <__bad_interrupt>
  3e:	00 00       	nop
  40:	26 c0       	rjmp	.+76     	; 0x8e <__bad_interrupt>
  42:	00 00       	nop
  44:	24 c0       	rjmp	.+72     	; 0x8e <__bad_interrupt>
  46:	00 00       	nop
  48:	22 c0       	rjmp	.+68     	; 0x8e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	20 c0       	rjmp	.+64     	; 0x8e <__bad_interrupt>
  4e:	00 00       	nop
  50:	1e c0       	rjmp	.+60     	; 0x8e <__bad_interrupt>
  52:	00 00       	nop
  54:	1c c0       	rjmp	.+56     	; 0x8e <__bad_interrupt>
  56:	00 00       	nop
  58:	1a c0       	rjmp	.+52     	; 0x8e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	18 c0       	rjmp	.+48     	; 0x8e <__bad_interrupt>
  5e:	00 00       	nop
  60:	16 c0       	rjmp	.+44     	; 0x8e <__bad_interrupt>
  62:	00 00       	nop
  64:	14 c0       	rjmp	.+40     	; 0x8e <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e7       	ldi	r30, 0x7C	; 124
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 39       	cpi	r26, 0x98	; 152
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	6e d0       	rcall	.+220    	; 0x168 <main>
  8c:	75 c1       	rjmp	.+746    	; 0x378 <_exit>

0000008e <__bad_interrupt>:
  8e:	b8 cf       	rjmp	.-144    	; 0x0 <__vectors>

00000090 <lcd_cmd>:
	}
	if(digits>5)
	{
		lcd_data('e');
	}
}
  90:	85 b9       	out	0x05, r24	; 5
  92:	5a 98       	cbi	0x0b, 2	; 11
  94:	5b 9a       	sbi	0x0b, 3	; 11
  96:	89 ef       	ldi	r24, 0xF9	; 249
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	01 97       	sbiw	r24, 0x01	; 1
  9c:	f1 f7       	brne	.-4      	; 0x9a <lcd_cmd+0xa>
  9e:	00 c0       	rjmp	.+0      	; 0xa0 <lcd_cmd+0x10>
  a0:	00 00       	nop
  a2:	5b 98       	cbi	0x0b, 3	; 11
  a4:	08 95       	ret

000000a6 <lcd_data>:
  a6:	85 b9       	out	0x05, r24	; 5
  a8:	5a 9a       	sbi	0x0b, 2	; 11
  aa:	5b 9a       	sbi	0x0b, 3	; 11
  ac:	89 ef       	ldi	r24, 0xF9	; 249
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	01 97       	sbiw	r24, 0x01	; 1
  b2:	f1 f7       	brne	.-4      	; 0xb0 <lcd_data+0xa>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <lcd_data+0x10>
  b6:	00 00       	nop
  b8:	5b 98       	cbi	0x0b, 3	; 11
  ba:	08 95       	ret

000000bc <lcd_init>:
  bc:	88 e3       	ldi	r24, 0x38	; 56
  be:	e8 df       	rcall	.-48     	; 0x90 <lcd_cmd>
  c0:	81 ee       	ldi	r24, 0xE1	; 225
  c2:	94 e0       	ldi	r25, 0x04	; 4
  c4:	01 97       	sbiw	r24, 0x01	; 1
  c6:	f1 f7       	brne	.-4      	; 0xc4 <lcd_init+0x8>
  c8:	00 c0       	rjmp	.+0      	; 0xca <lcd_init+0xe>
  ca:	00 00       	nop
  cc:	82 e0       	ldi	r24, 0x02	; 2
  ce:	e0 df       	rcall	.-64     	; 0x90 <lcd_cmd>
  d0:	81 ee       	ldi	r24, 0xE1	; 225
  d2:	94 e0       	ldi	r25, 0x04	; 4
  d4:	01 97       	sbiw	r24, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <lcd_init+0x18>
  d8:	00 c0       	rjmp	.+0      	; 0xda <lcd_init+0x1e>
  da:	00 00       	nop
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	d8 df       	rcall	.-80     	; 0x90 <lcd_cmd>
  e0:	81 ee       	ldi	r24, 0xE1	; 225
  e2:	94 e0       	ldi	r25, 0x04	; 4
  e4:	01 97       	sbiw	r24, 0x01	; 1
  e6:	f1 f7       	brne	.-4      	; 0xe4 <lcd_init+0x28>
  e8:	00 c0       	rjmp	.+0      	; 0xea <lcd_init+0x2e>
  ea:	00 00       	nop
  ec:	8c e0       	ldi	r24, 0x0C	; 12
  ee:	d0 df       	rcall	.-96     	; 0x90 <lcd_cmd>
  f0:	81 ee       	ldi	r24, 0xE1	; 225
  f2:	94 e0       	ldi	r25, 0x04	; 4
  f4:	01 97       	sbiw	r24, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <lcd_init+0x38>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <lcd_init+0x3e>
  fa:	00 00       	nop
  fc:	86 e0       	ldi	r24, 0x06	; 6
  fe:	c8 df       	rcall	.-112    	; 0x90 <lcd_cmd>
 100:	81 ee       	ldi	r24, 0xE1	; 225
 102:	94 e0       	ldi	r25, 0x04	; 4
 104:	01 97       	sbiw	r24, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <lcd_init+0x48>
 108:	00 c0       	rjmp	.+0      	; 0x10a <lcd_init+0x4e>
 10a:	00 00       	nop
 10c:	80 e8       	ldi	r24, 0x80	; 128
 10e:	c0 df       	rcall	.-128    	; 0x90 <lcd_cmd>
 110:	81 ee       	ldi	r24, 0xE1	; 225
 112:	94 e0       	ldi	r25, 0x04	; 4
 114:	01 97       	sbiw	r24, 0x01	; 1
 116:	f1 f7       	brne	.-4      	; 0x114 <lcd_init+0x58>
 118:	00 c0       	rjmp	.+0      	; 0x11a <lcd_init+0x5e>
 11a:	00 00       	nop
 11c:	08 95       	ret

0000011e <cursorxy>:
 11e:	9f ef       	ldi	r25, 0xFF	; 255
 120:	98 0f       	add	r25, r24
 122:	92 30       	cpi	r25, 0x02	; 2
 124:	38 f4       	brcc	.+14     	; 0x134 <cursorxy+0x16>
 126:	2f ef       	ldi	r18, 0xFF	; 255
 128:	26 0f       	add	r18, r22
 12a:	20 31       	cpi	r18, 0x10	; 16
 12c:	28 f4       	brcc	.+10     	; 0x138 <cursorxy+0x1a>
 12e:	81 30       	cpi	r24, 0x01	; 1
 130:	41 f4       	brne	.+16     	; 0x142 <cursorxy+0x24>
 132:	03 c0       	rjmp	.+6      	; 0x13a <cursorxy+0x1c>
 134:	61 e0       	ldi	r22, 0x01	; 1
 136:	01 c0       	rjmp	.+2      	; 0x13a <cursorxy+0x1c>
 138:	61 e0       	ldi	r22, 0x01	; 1
 13a:	8f e7       	ldi	r24, 0x7F	; 127
 13c:	86 0f       	add	r24, r22
 13e:	a8 cf       	rjmp	.-176    	; 0x90 <lcd_cmd>
 140:	08 95       	ret
 142:	8f eb       	ldi	r24, 0xBF	; 191
 144:	86 0f       	add	r24, r22
 146:	a4 cf       	rjmp	.-184    	; 0x90 <lcd_cmd>
 148:	08 95       	ret

0000014a <lcd_out>:

void lcd_out(char x, char y, char *str)
{
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	ea 01       	movw	r28, r20
	cursorxy(x,y);
 150:	e6 df       	rcall	.-52     	; 0x11e <cursorxy>
	while(*str)
 152:	88 81       	ld	r24, Y
 154:	88 23       	and	r24, r24
 156:	29 f0       	breq	.+10     	; 0x162 <lcd_out+0x18>
	{
		lcd_data(*str);
 158:	21 96       	adiw	r28, 0x01	; 1
 15a:	a5 df       	rcall	.-182    	; 0xa6 <lcd_data>
}

void lcd_out(char x, char y, char *str)
{
	cursorxy(x,y);
	while(*str)
 15c:	89 91       	ld	r24, Y+
 15e:	81 11       	cpse	r24, r1
 160:	fc cf       	rjmp	.-8      	; 0x15a <lcd_out+0x10>
	{
		lcd_data(*str);
		str++;
	}

}
 162:	df 91       	pop	r29
 164:	cf 91       	pop	r28
 166:	08 95       	ret

00000168 <main>:

int main(void)
{
	DDRB = 0xff; // 1111 1111
 168:	8f ef       	ldi	r24, 0xFF	; 255
 16a:	84 b9       	out	0x04, r24	; 4
	DDRD |= (1 << 2);
 16c:	52 9a       	sbi	0x0a, 2	; 10
	DDRD |= (1 << 3);
 16e:	53 9a       	sbi	0x0a, 3	; 10
	
	// LANE 1
	DDRD|=(1<<PD5);
 170:	55 9a       	sbi	0x0a, 5	; 10
	DDRD|=(1<<PD6);
 172:	56 9a       	sbi	0x0a, 6	; 10
	DDRD|=(1<<PD7);
 174:	57 9a       	sbi	0x0a, 7	; 10
	
	// LANE 2
	DDRC|=(1<<PC6);
 176:	3e 9a       	sbi	0x07, 6	; 7
	DDRD|=(1<<PD0);
 178:	50 9a       	sbi	0x0a, 0	; 10
	DDRD|=(1<<PD1);
 17a:	51 9a       	sbi	0x0a, 1	; 10
	
	// LANE 3
	DDRC|=(1<<PC5);
 17c:	3d 9a       	sbi	0x07, 5	; 7
	DDRC|=(1<<PC4);
 17e:	3c 9a       	sbi	0x07, 4	; 7
	DDRC|=(1<<PC3);
 180:	3b 9a       	sbi	0x07, 3	; 7
	
	// LANE 4
	DDRC|=(1<<PC2);
 182:	3a 9a       	sbi	0x07, 2	; 7
	DDRC|=(1<<PC1);
 184:	39 9a       	sbi	0x07, 1	; 7
	DDRC|=(1<<PC0);
 186:	38 9a       	sbi	0x07, 0	; 7
	
	while(1)
	{
		lcd_init();
 188:	99 df       	rcall	.-206    	; 0xbc <lcd_init>
		lcd_out(1,1,"MG Road Traffic");
 18a:	40 e0       	ldi	r20, 0x00	; 0
 18c:	51 e0       	ldi	r21, 0x01	; 1
 18e:	61 e0       	ldi	r22, 0x01	; 1
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	db df       	rcall	.-74     	; 0x14a <lcd_out>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 194:	2f e7       	ldi	r18, 0x7F	; 127
 196:	36 e9       	ldi	r19, 0x96	; 150
 198:	88 e9       	ldi	r24, 0x98	; 152
 19a:	21 50       	subi	r18, 0x01	; 1
 19c:	30 40       	sbci	r19, 0x00	; 0
 19e:	80 40       	sbci	r24, 0x00	; 0
 1a0:	e1 f7       	brne	.-8      	; 0x19a <main+0x32>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <main+0x3c>
		_delay_ms(50000);
		
		// LANE 1
		lcd_init();
 1a4:	00 00       	nop
 1a6:	8a df       	rcall	.-236    	; 0xbc <lcd_init>
		lcd_out(1,1,"Lane 1 Stop");
 1a8:	40 e1       	ldi	r20, 0x10	; 16
 1aa:	51 e0       	ldi	r21, 0x01	; 1
 1ac:	61 e0       	ldi	r22, 0x01	; 1
 1ae:	81 e0       	ldi	r24, 0x01	; 1
 1b0:	cc df       	rcall	.-104    	; 0x14a <lcd_out>
		PORTC|=(1<<PC6);
 1b2:	46 9a       	sbi	0x08, 6	; 8
 1b4:	9f e7       	ldi	r25, 0x7F	; 127
 1b6:	26 e9       	ldi	r18, 0x96	; 150
 1b8:	38 e9       	ldi	r19, 0x98	; 152
 1ba:	91 50       	subi	r25, 0x01	; 1
 1bc:	20 40       	sbci	r18, 0x00	; 0
 1be:	30 40       	sbci	r19, 0x00	; 0
 1c0:	e1 f7       	brne	.-8      	; 0x1ba <main+0x52>
 1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <main+0x5c>
		_delay_ms(50000);
		PORTC&=~(1<<PC6);
 1c4:	00 00       	nop
		lcd_init();
 1c6:	46 98       	cbi	0x08, 6	; 8
		lcd_out(1,1,"Lane 1 Wait");
 1c8:	79 df       	rcall	.-270    	; 0xbc <lcd_init>
 1ca:	4c e1       	ldi	r20, 0x1C	; 28
 1cc:	51 e0       	ldi	r21, 0x01	; 1
 1ce:	61 e0       	ldi	r22, 0x01	; 1
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	bb df       	rcall	.-138    	; 0x14a <lcd_out>
		PORTD|=(1<<PD0);
 1d4:	58 9a       	sbi	0x0b, 0	; 11
 1d6:	8f e7       	ldi	r24, 0x7F	; 127
 1d8:	9d e8       	ldi	r25, 0x8D	; 141
 1da:	2b e5       	ldi	r18, 0x5B	; 91
 1dc:	81 50       	subi	r24, 0x01	; 1
 1de:	90 40       	sbci	r25, 0x00	; 0
 1e0:	20 40       	sbci	r18, 0x00	; 0
 1e2:	e1 f7       	brne	.-8      	; 0x1dc <main+0x74>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <main+0x7e>
		_delay_ms(30000);
		PORTD&=~(1<<PD0);
		lcd_init();
 1e6:	00 00       	nop
 1e8:	58 98       	cbi	0x0b, 0	; 11
		lcd_out(1,1,"Lane 1 Go");
 1ea:	68 df       	rcall	.-304    	; 0xbc <lcd_init>
 1ec:	48 e2       	ldi	r20, 0x28	; 40
 1ee:	51 e0       	ldi	r21, 0x01	; 1
 1f0:	61 e0       	ldi	r22, 0x01	; 1
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	aa df       	rcall	.-172    	; 0x14a <lcd_out>
		PORTD|=(1<<PD1);
 1f6:	59 9a       	sbi	0x0b, 1	; 11
 1f8:	3a e2       	ldi	r19, 0x2A	; 42
 1fa:	80 e5       	ldi	r24, 0x50	; 80
 1fc:	9e ef       	ldi	r25, 0xFE	; 254
 1fe:	20 e0       	ldi	r18, 0x00	; 0
 200:	31 50       	subi	r19, 0x01	; 1
 202:	80 40       	sbci	r24, 0x00	; 0
 204:	90 40       	sbci	r25, 0x00	; 0
 206:	20 40       	sbci	r18, 0x00	; 0
 208:	d9 f7       	brne	.-10     	; 0x200 <main+0x98>
		_delay_ms(100000);
		PORTD&=~(1<<PD1);
 20a:	00 00       	nop
 20c:	59 98       	cbi	0x0b, 1	; 11
 20e:	89 ef       	ldi	r24, 0xF9	; 249
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	01 97       	sbiw	r24, 0x01	; 1
 214:	f1 f7       	brne	.-4      	; 0x212 <main+0xaa>
		_delay_ms(1);
		
		// LANE 2
		lcd_init();
 216:	00 c0       	rjmp	.+0      	; 0x218 <main+0xb0>
 218:	00 00       	nop
		lcd_out(1,1,"Lane 2 Stop");
 21a:	50 df       	rcall	.-352    	; 0xbc <lcd_init>
 21c:	42 e3       	ldi	r20, 0x32	; 50
 21e:	51 e0       	ldi	r21, 0x01	; 1
 220:	61 e0       	ldi	r22, 0x01	; 1
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	92 df       	rcall	.-220    	; 0x14a <lcd_out>
		PORTD|=(1<<PD5);
 226:	5d 9a       	sbi	0x0b, 5	; 11
 228:	9f e7       	ldi	r25, 0x7F	; 127
 22a:	26 e9       	ldi	r18, 0x96	; 150
 22c:	38 e9       	ldi	r19, 0x98	; 152
 22e:	91 50       	subi	r25, 0x01	; 1
 230:	20 40       	sbci	r18, 0x00	; 0
 232:	30 40       	sbci	r19, 0x00	; 0
 234:	e1 f7       	brne	.-8      	; 0x22e <main+0xc6>
		_delay_ms(50000);
		PORTD&=~(1<<PD5);
 236:	00 c0       	rjmp	.+0      	; 0x238 <main+0xd0>
		lcd_init();
 238:	00 00       	nop
 23a:	5d 98       	cbi	0x0b, 5	; 11
		lcd_out(1,1,"Lane 2 Wait");
 23c:	3f df       	rcall	.-386    	; 0xbc <lcd_init>
 23e:	4e e3       	ldi	r20, 0x3E	; 62
 240:	51 e0       	ldi	r21, 0x01	; 1
 242:	61 e0       	ldi	r22, 0x01	; 1
 244:	81 e0       	ldi	r24, 0x01	; 1
		PORTD|=(1<<PD6);
 246:	81 df       	rcall	.-254    	; 0x14a <lcd_out>
 248:	5e 9a       	sbi	0x0b, 6	; 11
 24a:	8f e7       	ldi	r24, 0x7F	; 127
 24c:	9d e8       	ldi	r25, 0x8D	; 141
 24e:	2b e5       	ldi	r18, 0x5B	; 91
 250:	81 50       	subi	r24, 0x01	; 1
 252:	90 40       	sbci	r25, 0x00	; 0
 254:	20 40       	sbci	r18, 0x00	; 0
 256:	e1 f7       	brne	.-8      	; 0x250 <main+0xe8>
		_delay_ms(30000);
		PORTD&=~(1<<PD6);
 258:	00 c0       	rjmp	.+0      	; 0x25a <main+0xf2>
		lcd_init();
 25a:	00 00       	nop
 25c:	5e 98       	cbi	0x0b, 6	; 11
		lcd_out(1,1,"Lane 2 Go");
 25e:	2e df       	rcall	.-420    	; 0xbc <lcd_init>
 260:	4a e4       	ldi	r20, 0x4A	; 74
 262:	51 e0       	ldi	r21, 0x01	; 1
 264:	61 e0       	ldi	r22, 0x01	; 1
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	70 df       	rcall	.-288    	; 0x14a <lcd_out>
		PORTD|=(1<<PD7);
 26a:	5f 9a       	sbi	0x0b, 7	; 11
 26c:	3a e2       	ldi	r19, 0x2A	; 42
 26e:	80 e5       	ldi	r24, 0x50	; 80
 270:	9e ef       	ldi	r25, 0xFE	; 254
 272:	20 e0       	ldi	r18, 0x00	; 0
 274:	31 50       	subi	r19, 0x01	; 1
 276:	80 40       	sbci	r24, 0x00	; 0
 278:	90 40       	sbci	r25, 0x00	; 0
 27a:	20 40       	sbci	r18, 0x00	; 0
		_delay_ms(100000);
		PORTD&=~(1<<PD7);
 27c:	d9 f7       	brne	.-10     	; 0x274 <main+0x10c>
 27e:	00 00       	nop
 280:	5f 98       	cbi	0x0b, 7	; 11
 282:	89 ef       	ldi	r24, 0xF9	; 249
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	01 97       	sbiw	r24, 0x01	; 1
 288:	f1 f7       	brne	.-4      	; 0x286 <main+0x11e>
		_delay_ms(1);
		
		// LANE 3
		lcd_init();
 28a:	00 c0       	rjmp	.+0      	; 0x28c <main+0x124>
 28c:	00 00       	nop
		lcd_out(1,1,"Lane 3 Stop");
 28e:	16 df       	rcall	.-468    	; 0xbc <lcd_init>
 290:	44 e5       	ldi	r20, 0x54	; 84
 292:	51 e0       	ldi	r21, 0x01	; 1
 294:	61 e0       	ldi	r22, 0x01	; 1
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	58 df       	rcall	.-336    	; 0x14a <lcd_out>
 29a:	45 9a       	sbi	0x08, 5	; 8
 29c:	9f e7       	ldi	r25, 0x7F	; 127
 29e:	26 e9       	ldi	r18, 0x96	; 150
 2a0:	38 e9       	ldi	r19, 0x98	; 152
 2a2:	91 50       	subi	r25, 0x01	; 1
 2a4:	20 40       	sbci	r18, 0x00	; 0
 2a6:	30 40       	sbci	r19, 0x00	; 0
 2a8:	e1 f7       	brne	.-8      	; 0x2a2 <main+0x13a>
		PORTC|=(1<<PC5);
		_delay_ms(50000);
		PORTC&=~(1<<PC5);
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <main+0x144>
		lcd_init();
 2ac:	00 00       	nop
		lcd_out(1,1,"Lane 3 Wait");
 2ae:	45 98       	cbi	0x08, 5	; 8
 2b0:	05 df       	rcall	.-502    	; 0xbc <lcd_init>
 2b2:	40 e6       	ldi	r20, 0x60	; 96
 2b4:	51 e0       	ldi	r21, 0x01	; 1
 2b6:	61 e0       	ldi	r22, 0x01	; 1
		PORTC|=(1<<PC4);
 2b8:	81 e0       	ldi	r24, 0x01	; 1
 2ba:	47 df       	rcall	.-370    	; 0x14a <lcd_out>
 2bc:	44 9a       	sbi	0x08, 4	; 8
 2be:	8f e7       	ldi	r24, 0x7F	; 127
 2c0:	9d e8       	ldi	r25, 0x8D	; 141
 2c2:	2b e5       	ldi	r18, 0x5B	; 91
 2c4:	81 50       	subi	r24, 0x01	; 1
 2c6:	90 40       	sbci	r25, 0x00	; 0
 2c8:	20 40       	sbci	r18, 0x00	; 0
 2ca:	e1 f7       	brne	.-8      	; 0x2c4 <main+0x15c>
		_delay_ms(30000);
		PORTC&=~(1<<PC4);
 2cc:	00 c0       	rjmp	.+0      	; 0x2ce <main+0x166>
		lcd_init();
 2ce:	00 00       	nop
 2d0:	44 98       	cbi	0x08, 4	; 8
		lcd_out(1,1,"Lane 3 Go");
 2d2:	f4 de       	rcall	.-536    	; 0xbc <lcd_init>
 2d4:	4c e6       	ldi	r20, 0x6C	; 108
 2d6:	51 e0       	ldi	r21, 0x01	; 1
 2d8:	61 e0       	ldi	r22, 0x01	; 1
 2da:	81 e0       	ldi	r24, 0x01	; 1
		PORTC|=(1<<PC3);
 2dc:	36 df       	rcall	.-404    	; 0x14a <lcd_out>
 2de:	43 9a       	sbi	0x08, 3	; 8
 2e0:	3a e2       	ldi	r19, 0x2A	; 42
 2e2:	80 e5       	ldi	r24, 0x50	; 80
 2e4:	9e ef       	ldi	r25, 0xFE	; 254
 2e6:	20 e0       	ldi	r18, 0x00	; 0
 2e8:	31 50       	subi	r19, 0x01	; 1
 2ea:	80 40       	sbci	r24, 0x00	; 0
 2ec:	90 40       	sbci	r25, 0x00	; 0
 2ee:	20 40       	sbci	r18, 0x00	; 0
		_delay_ms(100000);
		PORTC&=~(1<<PC3);
 2f0:	d9 f7       	brne	.-10     	; 0x2e8 <main+0x180>
 2f2:	00 00       	nop
 2f4:	43 98       	cbi	0x08, 3	; 8
 2f6:	89 ef       	ldi	r24, 0xF9	; 249
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	01 97       	sbiw	r24, 0x01	; 1
		_delay_ms(1);
		
		// LANE 4
		lcd_init();
 2fc:	f1 f7       	brne	.-4      	; 0x2fa <main+0x192>
 2fe:	00 c0       	rjmp	.+0      	; 0x300 <main+0x198>
		lcd_out(1,1,"Lane 4 Stop");
 300:	00 00       	nop
 302:	dc de       	rcall	.-584    	; 0xbc <lcd_init>
 304:	46 e7       	ldi	r20, 0x76	; 118
 306:	51 e0       	ldi	r21, 0x01	; 1
 308:	61 e0       	ldi	r22, 0x01	; 1
		PORTC|=(1<<PC2);
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	1e df       	rcall	.-452    	; 0x14a <lcd_out>
 30e:	42 9a       	sbi	0x08, 2	; 8
 310:	9f e7       	ldi	r25, 0x7F	; 127
 312:	26 e9       	ldi	r18, 0x96	; 150
 314:	38 e9       	ldi	r19, 0x98	; 152
 316:	91 50       	subi	r25, 0x01	; 1
 318:	20 40       	sbci	r18, 0x00	; 0
 31a:	30 40       	sbci	r19, 0x00	; 0
		_delay_ms(50000);
		PORTC&=~(1<<PC2);
 31c:	e1 f7       	brne	.-8      	; 0x316 <main+0x1ae>
		lcd_init();
 31e:	00 c0       	rjmp	.+0      	; 0x320 <main+0x1b8>
		lcd_out(1,1,"Lane 4 Wait");
 320:	00 00       	nop
 322:	42 98       	cbi	0x08, 2	; 8
 324:	cb de       	rcall	.-618    	; 0xbc <lcd_init>
 326:	42 e8       	ldi	r20, 0x82	; 130
 328:	51 e0       	ldi	r21, 0x01	; 1
 32a:	61 e0       	ldi	r22, 0x01	; 1
		PORTC|=(1<<PC1);
 32c:	81 e0       	ldi	r24, 0x01	; 1
 32e:	0d df       	rcall	.-486    	; 0x14a <lcd_out>
 330:	41 9a       	sbi	0x08, 1	; 8
 332:	8f e7       	ldi	r24, 0x7F	; 127
 334:	9d e8       	ldi	r25, 0x8D	; 141
 336:	2b e5       	ldi	r18, 0x5B	; 91
 338:	81 50       	subi	r24, 0x01	; 1
 33a:	90 40       	sbci	r25, 0x00	; 0
 33c:	20 40       	sbci	r18, 0x00	; 0
 33e:	e1 f7       	brne	.-8      	; 0x338 <main+0x1d0>
		_delay_ms(30000);
		PORTC&=~(1<<PC1);
 340:	00 c0       	rjmp	.+0      	; 0x342 <main+0x1da>
		lcd_init();
 342:	00 00       	nop
 344:	41 98       	cbi	0x08, 1	; 8
		lcd_out(1,1,"Lane 4 Go");
 346:	ba de       	rcall	.-652    	; 0xbc <lcd_init>
 348:	4e e8       	ldi	r20, 0x8E	; 142
 34a:	51 e0       	ldi	r21, 0x01	; 1
 34c:	61 e0       	ldi	r22, 0x01	; 1
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	fc de       	rcall	.-520    	; 0x14a <lcd_out>
		PORTC|=(1<<PC0);
 352:	40 9a       	sbi	0x08, 0	; 8
 354:	3a e2       	ldi	r19, 0x2A	; 42
 356:	80 e5       	ldi	r24, 0x50	; 80
 358:	9e ef       	ldi	r25, 0xFE	; 254
 35a:	20 e0       	ldi	r18, 0x00	; 0
 35c:	31 50       	subi	r19, 0x01	; 1
 35e:	80 40       	sbci	r24, 0x00	; 0
 360:	90 40       	sbci	r25, 0x00	; 0
 362:	20 40       	sbci	r18, 0x00	; 0
 364:	d9 f7       	brne	.-10     	; 0x35c <main+0x1f4>
 366:	00 00       	nop
		_delay_ms(100000);
		PORTC&=~(1<<PC0);
 368:	40 98       	cbi	0x08, 0	; 8
 36a:	89 ef       	ldi	r24, 0xF9	; 249
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	01 97       	sbiw	r24, 0x01	; 1
 370:	f1 f7       	brne	.-4      	; 0x36e <main+0x206>
 372:	00 c0       	rjmp	.+0      	; 0x374 <main+0x20c>
 374:	00 00       	nop
 376:	08 cf       	rjmp	.-496    	; 0x188 <main+0x20>

00000378 <_exit>:
 378:	f8 94       	cli

0000037a <__stop_program>:
 37a:	ff cf       	rjmp	.-2      	; 0x37a <__stop_program>
